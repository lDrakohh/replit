<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa GTA V</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        #map { height: 100vh; }
    </style>
</head>
<body>

<div id="map"></div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script>
    // Definición del sistema de coordenadas personalizado
    const center_x = 117.3;
    const center_y = 172.8;
    const scale_x = 0.02072;
    const scale_y = 0.0205;

    const CUSTOM_CRS = L.extend({}, L.CRS.Simple, {
        projection: L.Projection.LonLat,
        scale: function(zoom) {
            return Math.pow(2, zoom);
        },
        zoom: function(sc) {
            return Math.log(sc) / 0.6931471805599453;
        },
        distance: function(pos1, pos2) {
            var x_difference = pos2.lng - pos1.lng;
            var y_difference = pos2.lat - pos1.lat;
            return Math.sqrt(x_difference * x_difference + y_difference * y_difference);
        },
        transformation: new L.Transformation(scale_x, center_x, -scale_y, center_y),
        infinite: true
    });

    // Definición de la capa del mapa
    var SateliteStyle = L.tileLayer('mapStyles/styleSatelite/{z}/{x}/{y}.jpg', {
        minZoom: 0,
        maxZoom: 8,
        noWrap: true,
        continuousWorld: false
    });

    // Inicializa el mapa
    var map = L.map('map', {
        crs: CUSTOM_CRS,
        minZoom: 1,
        maxZoom: 5,
        zoom: 3,
        maxNativeZoom: 5,
        center: [0, 0],
        layers: [SateliteStyle] // Asegúrate de que esta capa está definida antes
    });

    // Función para agregar coordenadas al mapa
    function agregarCoordenadas(coordenadas) {
        coordenadas.forEach(coord => {
            L.marker([coord.latitud, coord.longitud], { icon: customIcon(1) })
                .addTo(map)
                .bindPopup(`Teléfono: ${coord.telefono}<br>Latitud: ${coord.latitud}, Longitud: ${coord.longitud}`);
        });
    }

    // Función para crear un icono personalizado
    function customIcon(icon) {
        return L.icon({
            iconUrl: `blips/${icon}.png`,
            iconSize: [20, 20],
            iconAnchor: [20, 20], 
            popupAnchor: [-10, -27]
        });
    }

    // Obtener coordenadas del backend
    fetch('/coordenadas')
        .then(response => response.json())
        .then(coordenadas => {
            agregarCoordenadas(coordenadas);
        })
        .catch(error => {
            console.error('Error al obtener las coordenadas:', error);
        });
</script>

</body>
</html>
